import { useEffect, useRef, useState } from 'react'
import type { FC } from 'react'

const XPreloaderIcon: FC<{ progress?: number; animated?: boolean }> = ({
	progress = 1,
	animated = false,
}) => {
	const [offset, setOffset] = useState(0)
	const reqRef = useRef<number | null>(null)

	useEffect(() => {
		if (!animated) return
		let start: number | null = null
		const duration = 1200 // ms
		const animate = (timestamp: number) => {
			if (!start) start = timestamp
			const elapsed = (timestamp - start) % duration
			setOffset(elapsed / duration)
			reqRef.current = requestAnimationFrame(animate)
		}
		reqRef.current = requestAnimationFrame(animate)
		return () => {
			if (reqRef.current !== null) cancelAnimationFrame(reqRef.current)
		}
	}, [animated])

	// Для shimmer: градиентная "волна" движется снизу вверх
	const gradOffset = animated ? offset : progress

	return (
		<svg
			xmlns='http://www.w3.org/2000/svg'
			width='46'
			height='48'
			viewBox='0 0 46 48'
			fill='none'
			style={{ display: 'block' }}
		>
			<defs>
				<linearGradient
					id='x-fill-gradient'
					x1='0'
					y1='48'
					x2='0'
					y2='0'
					gradientUnits='userSpaceOnUse'
				>
					<stop offset='0%' stopColor='#fff' />
					<stop
						offset={Math.max(0, gradOffset - 0.15) * 100 + '%'}
						stopColor='#fff'
					/>
					<stop
						offset={gradOffset * 100 + '%'}
						stopColor='rgba(255, 227, 75, 1)'
					/>
					<stop
						offset={Math.min(1, gradOffset + 0.15) * 100 + '%'}
						stopColor='#fff'
					/>
					<stop offset='100%' stopColor='#fff' />
				</linearGradient>
				<clipPath id='x-clip'>
					<path d='M45.0873 47.2832C43.8769 45.3559 42.6701 43.4261 41.4542 41.5023L39.6333 38.6147L37.8072 35.7306L34.1507 29.965L30.7164 24.5658L35.1349 18.0822L36.2985 16.378C36.6877 15.8108 37.0734 15.2413 37.4657 14.6762L39.8158 11.2828L40.7659 9.91078L28.2373 9.82471L27.9721 10.3C27.5865 10.991 27.2082 11.6861 26.8274 12.3799L26.5422 12.9004L26.2597 13.4225L25.6948 14.4667L24.5761 16.5614C24.3863 16.9218 24.1961 17.2819 24.0066 17.6423C23.7895 17.3134 23.5718 16.9849 23.3543 16.6563L22.6886 15.6603L22.0179 14.6672L21.342 13.6772L20.6593 12.6912C20.2033 12.0344 19.7396 11.3822 19.2686 10.7343C19.242 10.6976 19.1921 10.6839 19.1496 10.704C19.1017 10.7268 19.0813 10.784 19.104 10.8319C19.4477 11.5554 19.7988 12.2744 20.1575 12.9889L20.6968 14.0599L21.243 15.1269L21.7943 16.1908L22.3506 17.2518C22.7246 17.9572 23.0976 18.6632 23.4772 19.3654L24.0252 20.3794L24.6766 19.3572C25.1023 18.6893 25.5212 18.0175 25.9418 17.3466L27.192 15.3275L27.8115 14.3147L28.1212 13.8083L28.4283 13.3003C28.7381 12.7868 29.0493 12.2741 29.3578 11.7598C29.6029 11.7629 37.0944 11.7311 37.393 11.725L36.1008 13.7754C35.7347 14.3578 35.3619 14.9359 34.9926 15.5162L33.8809 17.2547L29.4278 24.2045L29.1964 24.5657L29.4277 24.9031L33.2887 30.5337L37.1574 36.1592L39.0939 38.9706L41.0355 41.7785C42.3281 43.6518 43.6296 45.519 44.9276 47.3886C44.9566 47.4303 45.0137 47.4424 45.0571 47.4151C45.1019 47.387 45.1154 47.328 45.0873 47.2832Z' />
					<path d='M24.9446 35.436L24.4053 34.3503L23.8592 33.2686L23.3079 32.1901L22.7516 31.1146C22.3776 30.3994 22.0045 29.6837 21.625 28.9719L21.0768 27.9436L20.4252 28.9801C19.9995 29.6572 19.5807 30.3383 19.16 31.0184L17.9098 33.0653L17.2903 34.092L16.9806 34.6053L16.6736 35.1203C16.3638 35.6407 16.0536 36.1608 15.7453 36.682C15.4998 36.6789 8.00725 36.7115 7.70839 36.7177L9.0009 34.6386C9.36699 34.0482 9.7399 33.4623 10.1091 32.8739L11.2209 31.1116L15.6738 24.0662L15.9054 23.6999L15.6736 23.358L11.8127 17.662L7.94416 11.9713L6.00776 9.12741L4.06618 6.28696C2.77374 4.39203 1.47223 2.50316 0.17431 0.611885C0.145266 0.569714 0.088201 0.55747 0.0447667 0.585158C2.62682e-05 0.613665 -0.0134386 0.673517 0.0147023 0.718863C1.22516 2.66874 2.43204 4.62102 3.64799 6.56721L5.469 9.48845L7.29518 12.4062L10.9518 18.239L14.3859 23.7004L9.96731 30.2729L8.8037 32.0005C8.41445 32.5755 8.02891 33.153 7.63653 33.7258L5.28645 37.1658L4.33657 38.5563L16.8647 38.6439L17.13 38.162C17.5156 37.4615 17.894 36.7569 18.2748 36.0536L18.56 35.526L18.8424 34.9967L19.4073 33.9381L20.526 31.8146C20.7158 31.4494 20.9059 31.0845 21.0954 30.7192C21.3124 31.0525 21.53 31.3854 21.7475 31.7184L22.4132 32.7281L23.084 33.7348L23.7599 34.7384L24.4426 35.7379C24.8986 36.4037 25.3623 37.0649 25.8333 37.7217C25.86 37.7589 25.9098 37.7729 25.9523 37.7524C26.0003 37.7294 26.0207 37.6713 25.9979 37.6228C25.6543 36.8893 25.3033 36.1604 24.9446 35.436Z' />
				</clipPath>
			</defs>
			<rect
				x='0'
				y='0'
				width='46'
				height='48'
				fill='url(#x-fill-gradient)'
				clipPath='url(#x-clip)'
			/>
		</svg>
	)
}

export default XPreloaderIcon
